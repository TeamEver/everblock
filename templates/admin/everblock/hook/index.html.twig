<div class="everblock-grid card">
  <div class="card-header d-flex justify-content-between align-items-center">
    <h3 class="card-title mb-0">{{ 'Hooks management'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</h3>
    <a class="btn btn-primary" href="{{ create_url }}">{{ 'Add new hook'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</a>
  </div>
  <div class="card-body">
    <form method="get" class="row g-2 mb-3">
      <div class="col-md-2">
        <label class="form-label">{{ 'ID'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</label>
        <input type="text" name="filters[id_hook]" value="{{ filters.id_hook|default('') }}" class="form-control" />
      </div>
      <div class="col-md-3">
        <label class="form-label">{{ 'Name'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</label>
        <input type="text" name="filters[name]" value="{{ filters.name|default('') }}" class="form-control" />
      </div>
      <div class="col-md-3">
        <label class="form-label">{{ 'Title'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</label>
        <input type="text" name="filters[title]" value="{{ filters.title|default('') }}" class="form-control" />
      </div>
      <div class="col-md-3">
        <label class="form-label">{{ 'Description'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</label>
        <input type="text" name="filters[description]" value="{{ filters.description|default('') }}" class="form-control" />
      </div>
      <div class="col-md-1">
        <label class="form-label">{{ 'Active'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</label>
        <select name="filters[active]" class="form-select">
          <option value="">--</option>
          <option value="1" {% if filters.active is defined and filters.active == '1' %}selected{% endif %}>{{ 'Yes'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</option>
          <option value="0" {% if filters.active is defined and filters.active == '0' %}selected{% endif %}>{{ 'No'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</option>
        </select>
      </div>
      <div class="col-12 d-flex gap-2">
        <button type="submit" class="btn btn-outline-secondary">{{ 'Filter'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</button>
        <a class="btn btn-link" href="{{ path('everblock_admin_hooks') }}">{{ 'Reset'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</a>
      </div>
    </form>

    <form method="post" id="everblock-hooks-bulk-form">
      <div class="table-responsive">
        <table class="table table-striped">
          <thead>
            <tr>
              <th><input type="checkbox" class="js-everblock-select-all"></th>
              {% for column in grid_definition.columns %}
                <th>{{ column.label }}</th>
              {% endfor %}
              <th class="text-end">{{ 'Actions'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</th>
            </tr>
          </thead>
          <tbody>
            {% for record in grid_data.records %}
              <tr>
                <td><input type="checkbox" name="ids[]" value="{{ record.id_hook }}"></td>
                {% for column in grid_definition.columns %}
                  <td>
                    {% set value = attribute(record, column.name) %}
                    {% if column.type is defined and column.type == 'bool' %}
                      {% if value %}
                        <span class="badge bg-success">{{ 'Yes'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</span>
                      {% else %}
                        <span class="badge bg-secondary">{{ 'No'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</span>
                      {% endif %}
                    {% else %}
                      {{ value }}
                    {% endif %}
                  </td>
                {% endfor %}
                <td class="text-end">
                  <div class="btn-group" role="group">
                    <a class="btn btn-outline-secondary btn-sm" href="{{ path(edit_route, {hookId: record.id_hook}) }}">{{ 'Edit'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</a>
                    <a class="btn btn-outline-secondary btn-sm" href="{{ path(toggle_route, {hookId: record.id_hook}) }}">{{ 'Toggle'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</a>
                  </div>
                </td>
              </tr>
            {% else %}
              <tr>
                <td colspan="{{ grid_definition.columns|length + 2 }}" class="text-center text-muted">{{ 'No hooks found.'|trans({}, 'Modules.Everblock.Admineverblockcontroller') }}</td>
              </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
      <div class="d-flex flex-wrap gap-2 mt-3">
        <button type="submit" formaction="{{ bulk_enable_url }}" class="btn btn-success" data-confirm="{{ grid_definition.bulk_actions.enable.confirm }}">{{ grid_definition.bulk_actions.enable.label }}</button>
        <button type="submit" formaction="{{ bulk_disable_url }}" class="btn btn-warning" data-confirm="{{ grid_definition.bulk_actions.disable.confirm }}">{{ grid_definition.bulk_actions.disable.label }}</button>
        <button type="submit" formaction="{{ bulk_delete_url }}" class="btn btn-danger" data-confirm="{{ grid_definition.bulk_actions.delete.confirm }}">{{ grid_definition.bulk_actions.delete.label }}</button>
      </div>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var toggle = document.querySelector('.js-everblock-select-all');
    if (toggle) {
      toggle.addEventListener('change', function (event) {
        document.querySelectorAll('#everblock-hooks-bulk-form input[name="ids[]"]').forEach(function (checkbox) {
          checkbox.checked = event.target.checked;
        });
      });
    }

    document.querySelectorAll('#everblock-hooks-bulk-form button[data-confirm]').forEach(function (button) {
      button.addEventListener('click', function (event) {
        var confirmMessage = button.getAttribute('data-confirm');
        if (confirmMessage && !confirm(confirmMessage)) {
          event.preventDefault();
        }
      });
    });
  });
</script>
